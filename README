#20180508
分区管理数据，每层的桶内都是允许overlap的文件，最后一层是有序文件
1.在L0分区的基础之上，将LOG和L0层的文件写到一个盘，将L1-L6写到另一个盘【2个线程】
2. 在以上修改的基础之上，将LSM-tree的L1到L6层改为两层Partition
	第一层PAR，是10个分区的bucket,存放L0 compaction过来的文件；
	第二层PAR，是100个分区，每个分区有个bucket，存放上层分区compaction过来的文件，bucket满了之后compaction

问题：多bucket有延迟compaction的作用，但是会不会影响读性能？


leveldb: A key-value store
Authors: Sanjay Ghemawat (sanjay@google.com) and Jeff Dean (jeff@google.com)

The code under this directory implements a system for maintaining a
persistent key/value store.

See doc/index.html for more explanation.
See doc/impl.html for a brief overview of the implementation.

The public interface is in include/*.h.  Callers should not include or
rely on the details of any other header files in this package.  Those
internal APIs may be changed without warning.

Guide to header files:

include/db.h
    Main interface to the DB: Start here

include/options.h
    Control over the behavior of an entire database, and also
    control over the behavior of individual reads and writes.

include/comparator.h
    Abstraction for user-specified comparison function.  If you want
    just bytewise comparison of keys, you can use the default comparator,
    but clients can write their own comparator implementations if they
    want custom ordering (e.g. to handle different character
    encodings, etc.)

include/iterator.h
    Interface for iterating over data. You can get an iterator
    from a DB object.

include/write_batch.h
    Interface for atomically applying multiple updates to a database.

include/slice.h
    A simple module for maintaining a pointer and a length into some
    other byte array.

include/status.h
    Status is returned from many of the public interfaces and is used
    to report success and various kinds of errors.

include/env.h
    Abstraction of the OS environment.  A posix implementation of
    this interface is in util/env_posix.cc

include/table.h
include/table_builder.h
    Lower-level modules that most clients probably won't use directly

Install
=======

Get up and running quickly:

    $ autoreconf -i
    $ ./configure
    $ make
    # make install
    # ldconfig
